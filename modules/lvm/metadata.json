{
  "name": "puppetlabs-lvm",
  "version": "0.3.1",
  "source": "UNKNOWN",
  "author": "puppetlabs",
  "license": "GPLv2",
  "project_page": "https://github.com/puppetlabs/puppetlabs-lvm",
  "summary": "Puppet types and providers to manage LVM",
  "operatingsystem_support": [
    {
      "operatingsystem": "RedHat"
    },
    {
      "operatingsystem": "CentOS"
    },
    {
      "operatingsystem": "OracleLinux"
    },
    {
      "operatingsystem": "Scientific"
    },
    {
      "operatingsystem": "Debian"
    },
    {
      "operatingsystem": "Ubuntu"
    },
    {
      "operatingsystem": "AIX"
    }
  ],
  "requirements": [
    {
      "name": "puppet",
      "version_requirement": "3.x"
    }
  ],
  "dependencies": [
    {
      "name": "puppetlabs/stdlib",
      "version_requirement": "4.1.x"
    }
  ],
  "description": "UNKNOWN",
  "types": [
    {
      "name": "physical_volume",
      "doc": "",
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.\n\nValid values are `present`, `absent`. "
        }
      ],
      "parameters": [
        {
          "name": "name",
          "doc": "\n\n"
        },
        {
          "name": "unless_vg",
          "doc": "Do not do anything if the VG already exists.  The value should be the\nname of the volume group to check for.\n\n"
        }
      ],
      "providers": [
        {
          "name": "lvm",
          "doc": "Manages LVM physical volumes\n\n* Required binaries: `pvcreate`, `pvremove`, `pvs`, `vgs`."
        }
      ]
    },
    {
      "name": "logical_volume",
      "doc": "",
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.\n\nValid values are `present`, `absent`. "
        },
        {
          "name": "size",
          "doc": "The size of the logical volume. Set to undef to use all available space\n\n"
        }
      ],
      "parameters": [
        {
          "name": "name",
          "doc": "The name of the logical volume.  This is the unqualified name and will be\nautomatically added to the volume group's device path (e.g., '/dev/$vg/$lv').\n\n"
        },
        {
          "name": "volume_group",
          "doc": "The volume group name associated with this logical volume.  This will automatically\nset this volume group as a dependency, but it must be defined elsewhere using the\nvolume_group resource type.\n\n"
        },
        {
          "name": "initial_size",
          "doc": "The initial size of the logical volume. This will only apply to newly-created volumes\n\n"
        },
        {
          "name": "extents",
          "doc": "The  number of logical extents to allocate for the new logical volume. Set to undef to use all available space\n\n"
        },
        {
          "name": "type",
          "doc": "Configures the logical volume type. AIX only\n\n"
        },
        {
          "name": "range",
          "doc": "Sets the inter-physical volume allocation policy. AIX only\n\n"
        },
        {
          "name": "stripes",
          "doc": "The number of stripes to allocate for the new logical volume.\n\n"
        },
        {
          "name": "stripesize",
          "doc": "The stripesize to use for the new logical volume.\n\n"
        }
      ],
      "providers": [
        {
          "name": "aix",
          "doc": "Manages LVM logical volumes on AIX\n\n* Required binaries: `mklv`.\n* Default for `operatingsystem` == `AIX`."
        },
        {
          "name": "lvm",
          "doc": "Manages LVM logical volumes\n\n* Required binaries: `blkid`, `dmsetup`, `lvcreate`, `lvextend`, `lvremove`, `lvs`, `resize2fs`, `resize4fs`, `umount`, `xfs_growfs`."
        }
      ]
    },
    {
      "name": "filesystem",
      "doc": "The filesystem type",
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.\n\nValid values are `present`, `absent`. "
        },
        {
          "name": "size",
          "doc": "Configures the size of the filesystem.  Supports filesystem resizing.  The size will be rounded up to the nearest multiple of the partition size. AIX only.\n\n"
        }
      ],
      "parameters": [
        {
          "name": "name",
          "doc": "\n\n"
        },
        {
          "name": "fs_type",
          "doc": "The file system type. eg. ext3.\n\n"
        },
        {
          "name": "options",
          "doc": "Params for the mkfs command. eg. -l internal,agcount=x\n\n"
        },
        {
          "name": "initial_size",
          "doc": "Initial size of the filesystem, Used only for resource creation, when using this option Puppet will not manage or maintain the size. To resize filesystems see the size property. AIX only.\n\n"
        },
        {
          "name": "ag_size",
          "doc": "Specify the allocation group size in megabytes, AIX only.\n\nValues can match `/\\d+/`."
        },
        {
          "name": "large_files",
          "doc": "Large file enabled file system.  AIX only\n\nValid values are `true`, `false`. "
        },
        {
          "name": "compress",
          "doc": "Data compression, LZ or no. AIX only\n\nValid values are `LG`, `no`. "
        },
        {
          "name": "frag",
          "doc": "JFS fragment size in bytes. AIX only\n\nValues can match `/\\d+/`."
        },
        {
          "name": "nbpi",
          "doc": "Bytes per inode. AIX only\n\nValues can match `/\\d+/`."
        },
        {
          "name": "logname",
          "doc": "Configure the log logical volume. AIX only\n\n"
        },
        {
          "name": "logsize",
          "doc": "Size for an inline log in MB, AIX only\n\nValues can match `/\\d+/`."
        },
        {
          "name": "maxext",
          "doc": "Size of a file extent in file system blocks, AIX only\n\nValues can match `/\\d+/`."
        },
        {
          "name": "mountguard",
          "doc": "Enable the mountguard. AIX only\n\nValid values are `true`, `false`. "
        },
        {
          "name": "agblksize",
          "doc": "JFS2 block size in bytes, AIX only.\n\nValues can match `/\\d+/`."
        },
        {
          "name": "extended_attributes",
          "doc": "Format to be used to store extended attributes. AIX only\n\nValid values are `v1`, `v2`. "
        },
        {
          "name": "encrypted",
          "doc": "Specify and encrypted filesystem. AIX only\n\nValid values are `true`, `false`. "
        },
        {
          "name": "isnapshot",
          "doc": "Specify whether the filesystem supports internal snapshots, AIX only\n\nValid values are `true`, `false`. "
        },
        {
          "name": "mount_options",
          "doc": "Specify the options to be passed to the mount command. AIX only\n\n"
        },
        {
          "name": "vix",
          "doc": "Specify that the file system can allocate inode extents smaller than the default, AIX only\n\nValid values are `true`, `false`. "
        },
        {
          "name": "log_partitions",
          "doc": "Specify the size of the log logical volume as number of logical partitions, AIX only\n\n"
        },
        {
          "name": "nodename",
          "doc": "Specify the remote host where the filesystem resides. AIX only\n\n"
        },
        {
          "name": "accounting",
          "doc": "Specify accounting subsystem support, AIX only\n\nValid values are `true`, `false`. "
        },
        {
          "name": "mountgroup",
          "doc": "Mount group for the filesystem, AIX only\n\n"
        },
        {
          "name": "atboot",
          "doc": "Specify whether the file system is mounted at boot time, AIX only\n\nValid values are `true`, `false`. "
        },
        {
          "name": "perms",
          "doc": "Permissions for the filesystem, AIX only\n\nValid values are `ro`, `rw`. "
        },
        {
          "name": "device",
          "doc": "Device to create the filesystem on, this can be a device or a logical volume. AIX only\n\n"
        },
        {
          "name": "volume_group",
          "doc": "Volume group that the file system should be greated on. AIX only.\n\n"
        }
      ],
      "providers": [
        {
          "name": "aix",
          "doc": "Manages logical volume filesystems on AIX\n\n* Required binaries: `chfs`, `crfs`.\n* Default for `operatingsystem` == `AIX`."
        },
        {
          "name": "lvm",
          "doc": "Manages filesystem of a logical volume\n\n* Required binaries: `blkid`."
        }
      ]
    },
    {
      "name": "volume_group",
      "doc": "",
      "properties": [
        {
          "name": "ensure",
          "doc": "The basic property that the resource should be in.\n\nValid values are `present`, `absent`. "
        },
        {
          "name": "physical_volumes",
          "doc": "The list of physical volumes to be included in the volume group; this\nwill automatically set these as dependencies, but they must be defined elsewhere\nusing the physical_volume resource type.\n\n"
        }
      ],
      "parameters": [
        {
          "name": "name",
          "doc": "The name of the volume group.\n\n"
        },
        {
          "name": "createonly",
          "doc": "If set to true the volume group will be created if it does not exist. If the\nvolume group does exist no action will be taken. Defaults to `false`.\n\nValid values are `true` (also called `yes`), `false` (also called `no`). "
        }
      ],
      "providers": [
        {
          "name": "lvm",
          "doc": "Manages LVM volume groups\n\n* Required binaries: `pvs`, `vgcreate`, `vgextend`, `vgreduce`, `vgremove`, `vgs`."
        }
      ]
    }
  ],
  "checksums": {
    "CHANGELOG": "14432f26430e4a6726989d2db6fc24c0",
    "Gemfile": "5da9fc713663cbb209eb2d849082a8f5",
    "Gemfile.lock": "7e5459f2740babe76389068831fdc4ee",
    "LICENSE": "751419260aa954499f7abaabaa882bbe",
    "Modulefile": "08b2b912d9cdc19931f4e5b0ea3eddf5",
    "README.md": "dbed08272d93912c9be98fab997c3393",
    "Rakefile": "df1f14bb7a2b17f144155e4e98ae0292",
    "lib/facter/lvm_support.rb": "d8f6e5fe34b713aaefe69b66aec89aa3",
    "lib/puppet/provider/filesystem/aix.rb": "522f95e24a10299934d589e432e01a3f",
    "lib/puppet/provider/filesystem/lvm.rb": "856c5eddd4c03affddca9eb6bdcc3678",
    "lib/puppet/provider/logical_volume/aix.rb": "86ca794d7fbb5c9932d19de5e95569b9",
    "lib/puppet/provider/logical_volume/lvm.rb": "5881f08076dd0365f7f62f4d822217ca",
    "lib/puppet/provider/physical_volume/lvm.rb": "75fbed66a99d708ab9ff6cc60754bd0e",
    "lib/puppet/provider/volume_group/lvm.rb": "3cb15a5ffffad434911f3d4ff7cfab4c",
    "lib/puppet/type/filesystem.rb": "e3353b02e2c9ea66be1bec36348e92b2",
    "lib/puppet/type/logical_volume.rb": "160d31b3e87af0ff9182398e2d9dbb09",
    "lib/puppet/type/physical_volume.rb": "d90f0d518d242cde40d59837af024875",
    "lib/puppet/type/volume_group.rb": "7c835a3f82a71ae435eaa2019dc7c3ca",
    "manifests/init.pp": "08b176f744b76592b9f98940720b6ee9",
    "manifests/logical_volume.pp": "4c729993f567df9911672058fa4bfc0e",
    "manifests/volume.pp": "7e58d053d812cde32e783cb4072ddc4e",
    "manifests/volume_group.pp": "604848d971992bb5d3e99744774c5b56",
    "spec/lib/helpers.rb": "cba0cd3b30e99fde8382fdafe8319bd4",
    "spec/lib/matchers.rb": "0d8a1189209ded0fcefdd5ca100b01d1",
    "spec/spec_helper.rb": "1e72cab0863fa504a38fc85c5bb6c648",
    "spec/unit/classes/lvm_spec.rb": "4d74e37304a1ed25cea9b3b0e6238976",
    "spec/unit/facter/lvm_support_spec.rb": "153634cf144e17094d0ff3a55e1c0ee8",
    "spec/unit/puppet/provider/filesystem/lvm_spec.rb": "5361f46e56952751499cd799b33fced5",
    "spec/unit/puppet/provider/logical_volume/lvm_spec.rb": "a85f269c20d9c3e4a006614b538abbd5",
    "spec/unit/puppet/provider/physical_volume/lvm_spec.rb": "85aa3cf9fcc1ff471b59f2971defb898",
    "spec/unit/puppet/provider/volume_group/lvm_spec.rb": "b0d27b62312d4eb94ae50727251ec650",
    "spec/unit/puppet/type/filesystem_spec.rb": "df513b356bd51bdbbc380325bec3c0c9",
    "spec/unit/puppet/type/logical_volume_spec.rb": "35170962c7bfaf83477ebdbba9c7617a",
    "spec/unit/puppet/type/physical_volume_spec.rb": "5fac7d253f2aef7e5fe9cd0215aba728",
    "spec/unit/puppet/type/volume_group_spec.rb": "eab4c298c22e655aa68af7a122d6a17f"
  }
}